diff --git a/include/Webservices/Create.php b/include/Webservices/Create.php
index 528f635..8f72b7d 100755
--- a/include/Webservices/Create.php
+++ b/include/Webservices/Create.php
@@ -7,30 +7,31 @@
  * Portions created by vtiger are Copyright (C) vtiger.
  * All Rights Reserved.
  ************************************************************************************ */
-require_once 'include/Webservices/SetRelation.php';
 
 function vtws_create($elementType, $element, $user) {
-	static $vtws_create_cache = array();
 
 	$types = vtws_listtypes(null, $user);
 	if (!in_array($elementType, $types['types'])) {
-		throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, 'Permission to perform the operation is denied');
+		throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, "Permission to perform the operation is denied");
 	}
 
-	global $log, $adb;
-	if (!empty($element['relations'])) {
-		$relations=$element['relations'];
-		unset($element['relations']);
+	global $log, $adb, $app_strings;
+
+	//setting $app_strings 
+	if(empty($app_strings)) { 
+		$currentLanguage = Vtiger_Language_Handler::getLanguage(); 
+		$moduleLanguageStrings = Vtiger_Language_Handler::getModuleStringsFromFile($currentLanguage); 
+		$app_strings = $moduleLanguageStrings['languageStrings']; 
 	}
-	require 'include/Webservices/processAttachments.php';
 
 	// Cache the instance for re-use
-	if (!isset($vtws_create_cache[$elementType]['webserviceobject'])) {
-		$webserviceObject = VtigerWebserviceObject::fromName($adb, $elementType);
+	if(!isset($vtws_create_cache[$elementType]['webserviceobject'])) {
+		$webserviceObject = VtigerWebserviceObject::fromName($adb,$elementType);
 		$vtws_create_cache[$elementType]['webserviceobject'] = $webserviceObject;
 	} else {
 		$webserviceObject = $vtws_create_cache[$elementType]['webserviceobject'];
 	}
+	// END			
 
 	$handlerPath = $webserviceObject->getHandlerPath();
 	$handlerClass = $webserviceObject->getHandlerClass();
@@ -39,91 +40,51 @@ function vtws_create($elementType, $element, $user) {
 
 	$handler = new $handlerClass($webserviceObject, $user, $adb, $log);
 	$meta = $handler->getMeta();
-	if (!$meta->hasCreateAccess()) {
-		throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, 'Permission to write is denied');
+	if ($meta->hasCreateAccess() !== true) {
+		throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, "Permission to write is denied");
 	}
 
 	$referenceFields = $meta->getReferenceFieldDetails();
-	$referenceFields['assigned_user_id'] = array('Users', 'Groups');
 	foreach ($referenceFields as $fieldName => $details) {
-		if (!empty($element[$fieldName])) {
-			$element[$fieldName] = vtws_getWSID($element[$fieldName]);
+		if (isset($element[$fieldName]) && strlen($element[$fieldName]) > 0) {
 			$ids = vtws_getIdComponents($element[$fieldName]);
 			$elemTypeId = $ids[0];
+			$elemId = $ids[1];
 			$referenceObject = VtigerWebserviceObject::fromId($adb, $elemTypeId);
 			if (!in_array($referenceObject->getEntityName(), $details)) {
-				throw new WebServiceException(WebServiceErrorCode::$REFERENCEINVALID, "Invalid reference specified for $fieldName");
+				throw new WebServiceException(WebServiceErrorCode::$REFERENCEINVALID,
+						"Invalid reference specified for $fieldName");
 			}
-			if ($referenceObject->getEntityName() == 'Users' && !$meta->hasAssignPrivilege($element[$fieldName])) {
-				throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, 'Cannot assign record to the given user');
+			if ($referenceObject->getEntityName() == 'Users') {
+				if(!$meta->hasAssignPrivilege($element[$fieldName])) {
+					throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, "Cannot assign record to the given user");
+				}
 			}
 			if (!in_array($referenceObject->getEntityName(), $types['types']) && $referenceObject->getEntityName() != 'Users') {
-				throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, 'Permission to access reference type is denied' . $referenceObject->getEntityName());
+				throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED,
+						"Permission to access reference type is denied" . $referenceObject->getEntityName());
 			}
-		} elseif (isset($element[$fieldName]) && $element[$fieldName] !== null) {
+		} else if ($element[$fieldName] !== NULL) {
 			unset($element[$fieldName]);
 		}
 	}
 
-	foreach ($meta->getModuleFields() as $fieldName => $webserviceField) {
-		$dval = $webserviceField->getDefault();
-		if (!isset($element[$fieldName]) && !empty($dval)) {
-			$element[$fieldName] = $dval;
-		}
-	}
-
 	if ($meta->hasMandatoryFields($element)) {
+
 		$ownerFields = $meta->getOwnerFields();
-		if (is_array($ownerFields)) {
+		if (is_array($ownerFields) && sizeof($ownerFields) > 0) {
 			foreach ($ownerFields as $ownerField) {
-				if (isset($element[$ownerField]) && $element[$ownerField] !== null && !$meta->hasAssignPrivilege($element[$ownerField])) {
-					throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, 'Cannot assign record to the given user');
+				if (isset($element[$ownerField]) && $element[$ownerField] !== null &&
+						!$meta->hasAssignPrivilege($element[$ownerField])) {
+					throw new WebServiceException(WebServiceErrorCode::$ACCESSDENIED, "Cannot assign record to the given user");
 				}
 			}
 		}
-		// Product line support
-		$hrequest = $_REQUEST;
-		if (in_array($elementType, getInventoryModules())) {
-			if (!empty($element['pdoInformation']) && is_array($element['pdoInformation'])) {
-				include 'include/Webservices/ProductLines.php';
-			} else {
-				$_REQUEST['action'] = $elementType.'Ajax';
-			}
-		}
-		if ($elementType == 'HelpDesk') {
-			//Added to construct the update log for Ticket history
-			$colflds = $element;
-			list($void, $colflds['assigned_user_id']) = explode('x', $colflds['assigned_user_id']);
-			$grp_name = fetchGroupName($colflds['assigned_user_id']);
-			$assigntype = ($grp_name != '') ? 'T' : 'U';
-			$updlog = HelpDesk::getUpdateLogCreateMessage($colflds, $grp_name, $assigntype);
-		}
 		$entity = $handler->create($elementType, $element);
-		if ($elementType == 'HelpDesk') {
-			list($wsid,$newrecid) = vtws_getIdComponents($entity['id']);
-			$adb->pquery('update vtiger_troubletickets set update_log=? where ticketid=?', array($updlog, $newrecid));
-		}
-		// Establish relations
-		if (!empty($relations)) {
-			list($wsid,$newrecid) = vtws_getIdComponents($entity['id']);
-			$modname = $meta->getEntityName();
-			$relations = explode(',', $relations);
-			vtws_internal_setrelation($newrecid, $modname, $relations, $types);
-		}
 		VTWS_PreserveGlobal::flush();
-		$_REQUEST = $hrequest;
-		if (!empty($wsAttachments)) {
-			foreach ($wsAttachments as $file) {
-				@unlink($file);
-			}
-		}
 		return $entity;
 	} else {
-		if (!empty($wsAttachments)) {
-			foreach ($wsAttachments as $file) {
-				@unlink($file);
-			}
-		}
+
 		return null;
 	}
 }
